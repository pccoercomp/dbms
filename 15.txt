// Create the "Institute" database
use Institute

// Create the "Students" collection and insert sample documents
db.createCollection("Students")
db.Students.insertMany([
  { RollNo: 1, "Student Name": "Alice", Age: 18, Branch: "Computer", Address: { City: "Pune", State: "MH" }, Hobbies: ["Reading", "Painting"] },
  { RollNo: 2, "Student Name": "Bob", Age: 17, Branch: "Electrical", Address: { City: "Mumbai", State: "MH" }, Hobbies: ["Music", "Sports"] },
  { RollNo: 3, "Student Name": "Charlie", Age: 16, Branch: "Mechanical", Address: { City: "Pune", State: "MH" }, Hobbies: ["Dancing", "Gaming"] },
  // Add 7 more documents with similar structure
])

// Display all students' information
db.Students.find({})

// Display Student information whose age is greater than 15
db.Students.find({ Age: { $gt: 15 } })

// Display Student information sorted on the "Student Name" field
db.Students.find().sort({ "Student Name": 1 })

// Update student branch "Computer" of RollNo 3
db.Students.updateOne({ RollNo: 3 }, { $set: { Branch: "Computer" } })

// Remove the document with RollNo 1
db.Students.deleteOne({ RollNo: 1 })

// Display Student information whose name starts with "A"
db.Students.find({ "Student Name": /^A/ })

// Display the total number of documents available in the collection
db.Students.count()

// Display only the first 5 documents
db.Students.find({}).limit(5)

// Display all documents except the first 3
db.Students.find({}).skip(3)

// Display the names of Students who live in "Pune" City
db.Students.find({ "Address.City": "Pune" }, { "Student Name": 1, _id: 0 })

// Display only the Name of all students
db.Students.find({}, { "Student Name": 1, _id: 0 })

// Drop the "Students" collection
db.Students.drop()
